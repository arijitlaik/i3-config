#!/bin/bash
# Copyright (C) 2014 Benjamin Chr√©tien <chretien@lirmm.fr>

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

default_timezone() {
  cur_tz=""
  if [ -h /etc/localtime ]; then
    # Fixes an apparent bug with ICT
    cur_tz="`readlink /etc/localtime | sed \"s/[.]\+\/usr\/share\/zoneinfo\///\"`"
  else
    cur_tz="`date +%Z`"
  fi
  echo "$cur_tz"
}

DATE_FORMAT="${BLOCK_INSTANCE:-"%d/%m/%Y %H:%M"}"
TIME_ZONES=("`default_timezone`" ${1:-})
CURRENT_TZ_FILE="/tmp/i3_timezone_id.dat"

YAD_CAL_CLASS="YADWIN_CALENDAR"

# If we do not have a file, start at zero
TZ_ID=0
if [ -f "${CURRENT_TZ_FILE}" ] ; then
  TZ_ID="`cat ${CURRENT_TZ_FILE}`"
fi

switch_time_zone() {
  N_TZ=${#TIME_ZONES[@]}
  if [ ${N_TZ} -gt 0 ]; then
    TZ_ID=$((($N_TZ+$TZ_ID+$1)%$N_TZ))
    echo "${TZ_ID}" > ${CURRENT_TZ_FILE}
  fi
}

kill_calendar() {
  # Kill any existing yad calendar
  if [[ -n "$1" ]]; then
    kill $1
  fi
}

display_calendar() {
  # Display the calendar with yad at the right position
  eval $(xdotool getmouselocation --shell) &>/dev/null
  yad --no-buttons --geometry=+$(($X-300))+20 \
      --class ${YAD_CAL_CLASS} --calendar & &>/dev/null
}

toggle_calendar() {
  # Calendar PID
  CAL_PID=$(xdotool search --class ${YAD_CAL_CLASS} getwindowpid)

  # If there's already a calendar process
  if [[ -n "$CAL_PID" ]]; then
    kill_calendar $CAL_PID
  else
    display_calendar
  fi
}

case $BLOCK_BUTTON in
    # Mouse wheel: switch time zone
    [4]) switch_time_zone  1;;
    [5]) switch_time_zone -1;;
    # Else: get mouse position then display calendar with yad
    [1-3]) toggle_calendar ;;
esac

CURRENT_TZ=${TIME_ZONES[${TZ_ID}]}
DATE_STR=`TZ=${CURRENT_TZ} date "+${DATE_FORMAT}"`
# If we are not using the default TZ:
if [ ${TZ_ID} -gt 0 ]; then
  CITY=" [`echo ${CURRENT_TZ} | cut -d'/' -f2 | tr _ \" \"`]"
fi
echo "${DATE_STR}${CITY}"
